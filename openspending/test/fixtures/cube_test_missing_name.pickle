(dp1
S'javascripts'
p2
(dp3
Vcompute_distincts
p4
ccopy_reg
_reconstructor
p5
(cbson.code
Code
p6
c__builtin__
str
p7
S'// aggregate all distinct values for top level properties for all entries\n// in a dataset and save them into a collection named\n// \'distincts__<dataset_name>\'. For the time property, the values\n// for time.[to,from][day,month,year] are added instead of the\n// \'time\' object.\n//\n// The documents in the collection have the following structure:\n// {_id: <the value>, {value: {keys: [<key>, ...]}}}\n// where _id is the value stored in an entry and \'value.keys\' are all\n// keys where the value is used.\n// To find all distinct values for a certain key in the entry documents\n// query the dedicated collection for {\'value.keys\': key} and use all\n// values for _id.\n\nfunction(dataset_name) {\n\n    // validate input\n    if (dataset_name === undefined) {\n        throw "dataset_name is required";\n    }\n    if (db.dataset.findOne({name: dataset_name}) === null) {\n        throw \'A dataset named "\' + dataset_name + \'" does not exist\';\n    }\n\n    // target colection name and index\n    var collection_name = \'distincts__\' + dataset_name;\n    var collection = db[collection_name];\n    collection.ensureIndex({\'value.keys\': 1});\n\n\n    var _map = function() {\n        // the same keys are used in openspending.model.entry.distinct\n        var known = [\'_id\', \'name\', \'amount\', \'_aggregation\',\n                     \'classifiers\', \'entities\', \'currency\'];\n\n        for (key in this) {\n            if (known.indexOf(key)>-1) {\n                continue;\n            }\n            if (key === \'time\') {\n                emit(this.time.from.year, {keys: [\'time.from.year\']});\n                emit(this.time.from.month, {keys: [\'time.from.month\']});\n                emit(this.time.from.day, {keys: [\'time.from.day\']});\n                emit(this.time.to.year, {keys: [\'time.to.year\']});\n                emit(this.time.to.month, {keys: [\'time.to.month\']});\n                emit(this.time.to.day, {keys: [\'time.to.day\']});\n            }\n            else {\n                emit(this[key], {keys: [key]});\n            }\n        };\n    };\n\n    var _reduce = function(value, emitted_keys) {\n        var result = {keys: []};\n        emitted_keys.forEach(function(emitted) {\n            emitted.keys.forEach(function(key){\n                if (result.keys.indexOf(key) === -1) {\n                    result.keys.push(key);\n                }\n            });\n        });\n        return result;\n    };\n\n    return db.entry.mapReduce(_map, _reduce,\n                              {\n                                  out: collection_name,\n                                  query: {\'dataset.name\': dataset_name}\n                              });\n};\n'
tRp8
(dp9
S'_Code__scope'
p10
(dp11
sbssS'collections'
p12
(dp13
Ventity
p14
(lp15
(dp16
V_id
p17
g5
(cbson.objectid
ObjectId
p18
c__builtin__
object
p19
NtRp20
S'Np\xc7\xd7#\xa0\x0c68\x96-s'
p21
bsVdescription
p22
V
sVname
p23
V
sVlabel
p24
VEntity w/o name
p25
sa(dp26
V_id
p27
g5
(g18
g19
NtRp28
S'Np\xc7\xd7#\xa0\x0c68\x96-t'
p29
bsVdescription
p30
V
sVname
p31
VTest To Entity
p32
sVlabel
p33
V
sasVentry
p34
(lp35
(dp36
Vfrom
p37
(dp38
Vlabel
p39
VEntity w/o name
p40
sV_id
p41
g5
(g18
g19
NtRp42
S'Np\xc7\xd7#\xa0\x0c68\x96-s'
p43
bsVref
p44
g5
(cbson.dbref
DBRef
p45
g19
NtRp46
(dp47
S'_DBRef__kwargs'
p48
(dp49
sS'_DBRef__collection'
p50
Ventity
p51
sS'_DBRef__database'
p52
NsS'_DBRef__id'
p53
g5
(g18
g19
NtRp54
S'Np\xc7\xd7#\xa0\x0c68\x96-s'
p55
bsbsVdescription
p56
V
sVname
p57
V
ssVname
p58
VEntry
p59
sVentities
p60
(lp61
g5
(g18
g19
NtRp62
S'Np\xc7\xd7#\xa0\x0c68\x96-t'
p63
bag5
(g18
g19
NtRp64
S'Np\xc7\xd7#\xa0\x0c68\x96-s'
p65
basVlabel
p66
VEntry Label
p67
sVdataset
p68
(dp69
Vtime_axis
p70
Vtime.from.year
p71
sVdescription
p72
V
sVlabel
p73
VTest Dataset
p74
sVcurrency
p75
VGBP
p76
sV_id
p77
V42b402b83a4577ab2cc68ec2df2415c544257200
p78
sVref
p79
g5
(g45
g19
NtRp80
(dp81
g48
(dp82
sg50
Vdataset
p83
sg52
Nsg53
V42b402b83a4577ab2cc68ec2df2415c544257200
p84
sbsVname
p85
Vtest_dataset
p86
ssVcurrency
p87
VGBP
p88
sVamount
p89
F1000
sVtime
p90
(dp91
Vfrom
p92
(dp93
Vday
p94
I20090101
sVyear
p95
I2009
sssV_id
p96
Va2e8d714d6b9882cb56ea2f11b2e6b8233ab811e
p97
sVto
p98
(dp99
Vlabel
p100
V
sV_id
p101
g5
(g18
g19
NtRp102
S'Np\xc7\xd7#\xa0\x0c68\x96-t'
p103
bsVref
p104
g5
(g45
g19
NtRp105
(dp106
g48
(dp107
sg50
Ventity
p108
sg52
Nsg53
g5
(g18
g19
NtRp109
S'Np\xc7\xd7#\xa0\x0c68\x96-t'
p110
bsbsVdescription
p111
V
sVname
p112
VTest To Entity
p113
ssasVdimension
p114
(lp115
(dp116
Vlabel
p117
VName
p118
sV_id
p119
g5
(g18
g19
NtRp120
S'Np\xc7\xd7y\x88i\xa6v\x00\x00\x00'
p121
bsVdescription
p122
V
sVkey
p123
Vname
p124
sVdataset
p125
Vtest_dataset
p126
sa(dp127
Vlabel
p128
VLabel
p129
sV_id
p130
g5
(g18
g19
NtRp131
S'Np\xc7\xd7y\x88i\xa6v\x00\x00\x01'
p132
bsVdescription
p133
V
sVkey
p134
Vlabel
p135
sVdataset
p136
Vtest_dataset
p137
sa(dp138
Vlabel
p139
VFrom
p140
sV_id
p141
g5
(g18
g19
NtRp142
S'Np\xc7\xd7y\x88i\xa6v\x00\x00\x02'
p143
bsVdescription
p144
V
sVkey
p145
Vfrom
p146
sVdataset
p147
Vtest_dataset
p148
sasVclassifier
p149
(lp150
sVdataset
p151
(lp152
(dp153
Vtime_axis
p154
Vtime.from.year
p155
sVdescription
p156
V
sVlabel
p157
VTest Dataset
p158
sVcurrency
p159
VGBP
p160
sV_id
p161
V42b402b83a4577ab2cc68ec2df2415c544257200
p162
sVname
p163
Vtest_dataset
p164
sassS'indexes'
p165
(dp166
g14
(dp167
V_id_
p168
(dp169
Vkey
p170
(lp171
(V_id
I1
tp172
asVv
I0
ssVname_1
p173
(dp174
VdropDups
p175
I00
sVunique
p176
I01
sVkey
p177
(lp178
(Vname
I1
tp179
asVv
I0
sssg34
(dp180
Ventities_1
p181
(dp182
Vkey
p183
(lp184
(Ventities
I1
tp185
asVv
I0
ssVto._id_1_from._id_1_amount_1
p186
(dp187
Vkey
p188
(lp189
(Vto._id
I1
tp190
a(Vfrom._id
I1
tp191
a(Vamount
I1
tp192
asVv
I0
ssVclassifiers_1
p193
(dp194
Vkey
p195
(lp196
(Vclassifiers
I1
tp197
asVv
I0
ssV_id_
p198
(dp199
Vkey
p200
(lp201
(V_id
I1
tp202
asVv
I0
ssVto._id_1
p203
(dp204
Vkey
p205
(lp206
(Vto._id
I1
tp207
asVv
I0
ssVdataset._id_1
p208
(dp209
Vkey
p210
(lp211
(Vdataset._id
I1
tp212
asVv
I0
ssVfrom._id_1
p213
(dp214
Vkey
p215
(lp216
(Vfrom._id
I1
tp217
asVv
I0
ssVdataset.name_1
p218
(dp219
Vkey
p220
(lp221
(Vdataset.name
I1
tp222
asVv
I0
sssg114
(dp223
V_id_
p224
(dp225
Vkey
p226
(lp227
(V_id
I1
tp228
asVv
I0
ssVdataset_1_key_1
p229
(dp230
Vkey
p231
(lp232
(Vdataset
I1
tp233
a(Vkey
I1
tp234
asVv
I0
sssg149
(dp235
V_id_
p236
(dp237
Vkey
p238
(lp239
(V_id
I1
tp240
asVv
I0
ssVtaxonomy_1_name_1
p241
(dp242
Vkey
p243
(lp244
(Vtaxonomy
I1
tp245
a(Vname
I1
tp246
asVv
I0
sssg151
(dp247
V_id_
p248
(dp249
Vkey
p250
(lp251
(V_id
I1
tp252
asVv
I0
ssss.